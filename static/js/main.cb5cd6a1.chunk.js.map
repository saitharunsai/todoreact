{"version":3,"sources":["components/todoItem.jsx","components/todoBody.jsx","components/todoForm.jsx","components/todoApp.jsx","App.js","index.js"],"names":["Item","styled","div","StyledInput","input","StyledSpan","span","DeleteButton","button","TodoItem","props","name","text","type","id","checked","complete","value","onChange","toggleComplete","htmlFor","style","textDecoration","onClick","onDeleteTask","TodoBodyContainer","TodoBody","TransitionGroup","component","tasks","map","task","CSSTransition","timeout","classNames","deleteTodo","StyledForm","form","AddButton","TodoForm","useState","setText","handleSubmit","event","preventDefault","onSubmit","parseInt","Date","now","placeholder","target","aria-label","role","TodoHeading","h1","TodoHeadingWrapper","TodoMain","TodoApp","setTask","useEffect","data","JSON","parse","localStorage","getItem","setItem","stringify","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb5cd6a1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Item = styled.div`\r\n  display: block;\r\n  padding: 8px;\r\n  // border: 2px solid red;\r\n  background-color: #00b4d8;\r\n  border-radius: 0 8px;\r\n  margin: 8px 0;\r\n  width: inherit;\r\n  height: 24px;\r\n  box-shadow: 2px 4px 4px #fff;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  line-height: 1.2;\r\n  margin-right: 4px;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  min-width: 380px;\r\n  padding: 8px 4px;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  color: white;\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n  color: white;\r\n  border-radius: 4px;\r\n  float: right;\r\n  background-color: #e41d1d;\r\n  outline: none;\r\n  border: none;\r\n  padding: 4px 8px;\r\n  margin-right: 8px;\r\n  box-shadow: 1px 1px 4px #fff;\r\n  transition: all 200ms ease;\r\n  &:hover {\r\n    background-color: #ff0000;\r\n    transform: translateY(2px);\r\n  }\r\n`;\r\n\r\nexport default function TodoItem(props) {\r\n  return (\r\n    <Item>\r\n      <StyledInput\r\n        name={props.text}\r\n        type=\"checkbox\"\r\n        id={props.id}\r\n        checked={props.complete}\r\n        value={props.text}\r\n        onChange={props.toggleComplete}\r\n      />\r\n      <label htmlFor={props.id}>\r\n        <StyledSpan\r\n          style={{\r\n            textDecoration: props.complete ? \"line-through\" : \"none\",\r\n          }}\r\n        >\r\n          {props.text}\r\n        </StyledSpan>\r\n      </label>\r\n      <DeleteButton onClick={props.onDeleteTask}> X </DeleteButton>\r\n    </Item>\r\n  );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  id: propTypes.number,\r\n  text: propTypes.string,\r\n  complete: propTypes.bool,\r\n  toggleComplete: propTypes.func,\r\n  onDeleteTask: propTypes.func,\r\n};","import { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nimport React from \"react\";\r\nimport TodoItem from \"./todoItem\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TodoBodyContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px;\r\n  // border: 2px solid green;\r\n  max-height: 400px;\r\n  min-height: 435px;\r\n  overflow: hidden;\r\n  overflow-y: scroll;\r\n  /* width */\r\n  &::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n  /* Track */\r\n  &::-webkit-scrollbar-track {\r\n    background: #03045e;\r\n  }\r\n  /* Handle */\r\n  &::-webkit-scrollbar-thumb {\r\n    background: #00b4d8;\r\n    border-radius: 8px;\r\n  }\r\n  /* Handle on hover */\r\n  &::-webkit-scrollbar-thumb:hover {\r\n    background: #fff;\r\n  }\r\n  // Transition\r\n  .transition-enter {\r\n    opacity: 0.01;\r\n  }\r\n  .transition-enter-active {\r\n    opacity: 1;\r\n    transition: all 0.4s ease-out;\r\n  }\r\n  .transition-exit {\r\n    opacity: 1;\r\n  }\r\n  .transition-exit-active {\r\n    opacity: 0.01;\r\n    transition: all 0.4s ease-in;\r\n  }\r\n`;\r\n\r\nexport default function TodoBody(props) {\r\n  return (\r\n    <TransitionGroup component={TodoBodyContainer}>\r\n      {props.tasks.map((task) => (\r\n        <CSSTransition key={task.id} timeout={400} classNames=\"transition\">\r\n          <TodoItem\r\n            id={task.id}\r\n            complete={task.complete}\r\n            toggleComplete={() => props.toggleComplete(task.id)}\r\n            text={task.text}\r\n            onDeleteTask={() => props.deleteTodo(task.id)}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n}\r\n\r\nTodoBody.propTypes = {\r\n  tasks: propTypes.array,\r\n  toggleComplete: propTypes.func,\r\n  deleteTodo: propTypes.func,\r\n};","import React, { useState } from \"react\";\r\n\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledForm = styled.form`\r\n  margin: 0;\r\n  // border: 2px solid blue;\r\n  padding: 16px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 300px;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  outline: none;\r\n  border: transparent;\r\n  box-shadow: 2px 4px 2px #90e0f0;\r\n`;\r\n\r\nconst AddButton = styled.button`\r\n  float: right;\r\n  width: 50px;\r\n  border-radius: 8px;\r\n  background-color: #00b4d8;\r\n  border: transparent;\r\n  padding: 8px;\r\n  outline: none;\r\n  box-shadow: 2px 4px 2px #90e0f0;\r\n  transition: all 200ms ease;\r\n  &:hover {\r\n    background-color: #eee;\r\n    transform: translateY(2px);\r\n  }\r\n`;\r\n\r\nexport default function TodoForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    [event.target.name] = event.target.value;\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (text !== \"\") {\r\n      props.onSubmit({\r\n        id: parseInt(Date.now() % 10000, 10),\r\n        text: text,\r\n        complete: false,\r\n      });\r\n      setText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={handleSubmit}>\r\n      <StyledInput\r\n        name=\"text\"\r\n        placeholder=\"Enter Task\"\r\n        value={text}\r\n        onChange={handleChange}\r\n      />\r\n      <AddButton onClick={handleSubmit}>\r\n        <span aria-label=\"add\" role=\"img\">\r\n          ➕\r\n        </span>\r\n      </AddButton>\r\n    </StyledForm>\r\n  );\r\n}\r\nTodoForm.propTypes = {\r\n    onSubmit: propTypes.func,\r\n  };","import React, { useEffect, useState } from \"react\";\r\n\r\nimport TodoBody from \"./todoBody.jsx\";\r\nimport TodoForm from \"./todoForm.jsx\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TodoHeading = styled.h1`\r\n  color: white;\r\n`;\r\n\r\nconst TodoHeadingWrapper = styled.div`\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst TodoMain = styled.div`\r\n  display: block;\r\n  min-width: 420px;\r\n  max-height: 640px;\r\n  // border: 2px solid violet;\r\n  background-color: #03045e;\r\n  border-radius: 0 32px;\r\n  box-shadow: 8px 8px 16px 2px #caf0f8;\r\n`;\r\n\r\nexport default function TodoApp() {\r\n  const [tasks, setTask] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(\"todo-app-data\"));\r\n    if (data) {\r\n      setTask(data);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todo-app-data\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addTodo = (task) => {\r\n    setTask([...tasks, task]);\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    setTask(\r\n      tasks.map((task) => {\r\n        if (task.id === id) {\r\n          return {\r\n            ...task,\r\n            complete: !task.complete,\r\n          };\r\n        } else {\r\n          return task;\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    setTask(tasks.filter((tasks) => tasks.id !== id));\r\n  };\r\n\r\n  return (\r\n    <TodoMain>\r\n      <TodoHeadingWrapper>\r\n        <TodoHeading>\r\n          <span aria-label=\"note\" role=\"img\">\r\n            📝\r\n          </span>{\" \"}\r\n          TO DO APP\r\n        </TodoHeading>\r\n      </TodoHeadingWrapper>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <TodoBody\r\n        tasks={tasks}\r\n        toggleComplete={toggleComplete}\r\n        deleteTodo={deleteTodo}\r\n      />\r\n    </TodoMain>\r\n  );\r\n}","  \nimport React from \"react\";\nimport TodoApp from \"./components/todoApp.jsx\";\n\nexport default function App() {\n  return <TodoApp />;\n}","import \"./index.css\";\n\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}